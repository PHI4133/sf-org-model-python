cache:
  key: ${CI_COMMIT_REF_NAME}
  paths:
    - .sf/
    - .sfdx/

stages:
  - backfill
  - validate
  - destroy
  - deploy

variables:
  DEPLOY_TIMEOUT: 240
  DEPLOY_LOG: deploy_log.txt
  DEPLOY_PACKAGE: package.xml
  # Update webhook URL here for your slack channel
  SLACK_WEBHOOK_URL: https://hooks.slack.com/services/

####################################################
# Push production commits back to sandbox branches.
# This will skip CI pipelines when pushing to GitLab.
####################################################
prodBackfill:
  stage: backfill
  rules:
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH && $CI_PIPELINE_SOURCE == 'push'
      when: always
    - when: never
  allow_failure: true
  script:
    - source ./scripts/bash/merge_main_into_sbx.sh
  tags: 
    - aws,prd,us-west-2

#####################################################
# Define a container to install the Salesforce CLI.
####################################################
.salesforce-container:
  image: ubuntu:latest
  before_script:
    - apt-get update
    - apt-get install -y curl git python3
    - curl -fsSL https://deb.nodesource.com/setup_lts.x | bash -
    - apt-get install -y nodejs
    - npm install --global @salesforce/cli@latest
    - echo y | sf plugins:install sfdx-git-delta
    - sf version --verbose --json
    - python3 ./scripts/python/create_deploy_package.py -f $BEFORE_SHA -t $CI_COMMIT_SHA -o $DEPLOY_PACKAGE -m "$COMMIT_MSG"
    - python3 ./scripts/python/authenticate_sf.py --alias $AUTH_ALIAS --url $AUTH_URL
    - testclasses=$(python3 ./scripts/python/package_check.py --manifest $DEPLOY_PACKAGE)

####################################################
# Validate metadata in a Salesforce org.
####################################################
.validate-metadata:
  extends: .salesforce-container
  cache:
    key: ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
    paths:
      - .sf/
      - .sfdx/
  script:
    - python3 ./scripts/python/deploy_metadata_sf.py --tests "$testclasses" --manifest $DEPLOY_PACKAGE --wait $DEPLOY_TIMEOUT --environment $CI_ENVIRONMENT_URL --log $DEPLOY_LOG --validate --pipeline $CI_PIPELINE_SOURCE | tee -a $DEPLOY_LOG
  after_script:
    - python3 ./scripts/python/deploy_slack_status.py --status "$CI_JOB_STATUS" --user "$GITLAB_USER_NAME" --job "$CI_JOB_URL" --project "$CI_PROJECT_URL" --commit "$CI_COMMIT_SHA" --environment "$CI_ENVIRONMENT_NAME" --webhook "$SLACK_WEBHOOK_URL"
    - rm $DEPLOY_PACKAGE
    - rm $DEPLOY_LOG

####################################################
# Deploy metadata into a Salesforce org.
####################################################
.deploy-metadata:
  extends: .salesforce-container
  script:
    # full-deploy if deploying non-apex
    # validate and quick-deploy if deploying apex
    - if [ "$testclasses" == "not a test" ];
      then python3 ./scripts/python/deploy_metadata_sf.py --tests "$testclasses" --manifest $DEPLOY_PACKAGE --wait $DEPLOY_TIMEOUT --environment $CI_ENVIRONMENT_URL --log $DEPLOY_LOG  | tee -a $DEPLOY_LOG;
      else python3 ./scripts/python/deploy_metadata_sf.py --tests "$testclasses" --manifest $DEPLOY_PACKAGE --wait $DEPLOY_TIMEOUT --environment $CI_ENVIRONMENT_URL --log $DEPLOY_LOG --validate | tee -a $DEPLOY_LOG;
      fi
  after_script:
    - python3 ./scripts/python/deploy_slack_status.py --status "$CI_JOB_STATUS" --user "$GITLAB_USER_NAME" --job "$CI_JOB_URL" --project "$CI_PROJECT_URL" --commit "$CI_COMMIT_SHA" --environment "$CI_ENVIRONMENT_NAME" --webhook "$SLACK_WEBHOOK_URL"
    - rm $DEPLOY_PACKAGE
    - rm $DEPLOY_LOG

####################################################
# Delete metadata in a Salesforce org.
####################################################
.delete-metadata:
  extends: .salesforce-container
  script:
    - python3 ./scripts/python/delete_metadata_sf.py --from_ref $BEFORE_SHA --to_ref $CI_COMMIT_SHA --wait $DEPLOY_TIMEOUT --environment $CI_ENVIRONMENT_URL --log $DEPLOY_LOG | tee -a $DEPLOY_LOG
  after_script:
    - rm $DEPLOY_LOG

####################################################
# Declare jobs for the sandbox org.
####################################################
validate:dev:
  extends: .validate-metadata
  stage: validate
  resource_group: dev
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'dev' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'dev'
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: SANDBOX
    AUTH_URL: $SANDBOX_AUTH_URL
    # This will work in merge request pipelines and merged results pipelines
    BEFORE_SHA: $CI_MERGE_REQUEST_DIFF_BASE_SHA
    # If you are working on GitLab v16.6, switch to CI_MERGE_REQUEST_DESCRIPTION
    COMMIT_MSG: $CI_COMMIT_MESSAGE
  environment:
    name: validate-sandbox
    url: https://avalara--dev.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

deploy:dev:
  extends: .deploy-metadata
  stage: deploy
  resource_group: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $SANDBOX_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'dev'
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: SANDBOX
    AUTH_URL: $SANDBOX_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
    COMMIT_MSG: $CI_COMMIT_MESSAGE
  environment:
    name: sandbox
    url: https://avalara--dev.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

destroy:dev:
  extends: .delete-metadata
  stage: destroy
  resource_group: dev
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $SANDBOX_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'dev'
      when: always
  allow_failure: true
  variables:
    AUTH_ALIAS: SANDBOX
    AUTH_URL: $SANDBOX_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
  environment:
    name: sandbox
    url: https://avalara--dev.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

####################################################
# Declare jobs for the fqa org.
####################################################
validate:fqa:
  extends: .validate-metadata
  stage: validate
  resource_group: fqa
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'dev' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'fqa'
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: FQA
    AUTH_URL: $FQA_AUTH_URL
    # This will work in merge request pipelines and merged results pipelines
    BEFORE_SHA: $CI_MERGE_REQUEST_DIFF_BASE_SHA
    # If you are working on GitLab v16.6, switch to CI_MERGE_REQUEST_DESCRIPTION
    COMMIT_MSG: $CI_COMMIT_MESSAGE
  environment:
    name: validate-fqa
    url: https://avalara--fqa.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

deploy:fqa:
  extends: .deploy-metadata
  stage: deploy
  resource_group: fqa
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $FQA_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'fqa'
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: FQA
    AUTH_URL: $FQA_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
    COMMIT_MSG: $CI_COMMIT_MESSAGE
  environment:
    name: fqa
    url: https://avalara--fqa.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

destroy:fqa:
  extends: .delete-metadata
  stage: destroy
  resource_group: fqa
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $FQA_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'fqa'
      when: always
  allow_failure: true
  variables:
    AUTH_ALIAS: FQA
    AUTH_URL: $FQA_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
  environment:
    name: fqa
    url: https://avalara--fqa.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

####################################################
# Declare jobs for the production org.
####################################################
validate:prd:
  extends: .validate-metadata
  stage: validate
  resource_group: prd
  rules:
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'dev' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: PRD
    AUTH_URL: $PRD_AUTH_URL
    # This will work in merge request pipelines and merged results pipelines
    BEFORE_SHA: $CI_MERGE_REQUEST_DIFF_BASE_SHA
    # If you are working on GitLab v16.6, switch to CI_MERGE_REQUEST_DESCRIPTION
    COMMIT_MSG: $CI_COMMIT_MESSAGE
  environment:
    name: validate-prod
    url: https://avalara.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

deploy:prd:
  extends: .deploy-metadata
  stage: deploy
  resource_group: prd
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $PRD_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: PRD
    AUTH_URL: $PRD_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
    COMMIT_MSG: $CI_COMMIT_MESSAGE
  environment:
    name: prd
    url: https://avalara.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

destroy:prd:
  extends: .delete-metadata
  stage: destroy
  resource_group: prd
  rules:
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $PRD_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: always
  allow_failure: true
  variables:
    AUTH_ALIAS: PRD
    AUTH_URL: $PRD_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
  environment:
    name: prd
    url: https://avalara.my.salesforce.com
  tags: 
    - aws,prd,us-west-2
