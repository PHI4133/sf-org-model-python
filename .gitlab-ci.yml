####################################################
# By default, use the current production image hosted
# in the GitLab repo's container registry.
# This image can be overriden by job-specific images.
####################################################
image: $CI_REGISTRY_IMAGE:production

cache:
  key: ${CI_COMMIT_REF_NAME}
  paths:
    - .sf/
    - .sfdx/

stages: 
  - build
  - validate
  - deploy

variables:
  DEPLOY_TIMEOUT: 240
  DEPLOY_LOG: deploy_log.txt
  DEPLOY_PACKAGE: package.xml
  # Update webhook URL here for your slack channel
  SLACK_WEBHOOK_URL: https://hooks.slack.com/services/

####################################################
# Build a Docker image for the org.
####################################################
build:
  image: docker:20.10.16
  stage: build
  services:
    - docker:20.10.16-dind  
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH || $CI_COMMIT_REF_NAME == 'develop' || $CI_COMMIT_REF_NAME == 'fullqa'
      changes:
        - Dockerfile
      when: always
  allow_failure: false
  variables:
    IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
    DOCKER_HOST: tcp://docker:2376 #Necessary for k8s
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_TLS_VERIFY: 1
    DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  # wait until docker in docker service is ready
  before_script:
    - until docker info; do sleep 1; done
  script:
    - if [ $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH ]; then IMAGE_TAG=$CI_REGISTRY_IMAGE:production; fi
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build --tag $IMAGE_TAG .
    - docker push $IMAGE_TAG
  tags: 
    - aws,prd,us-west-2

#####################################################
# Authenticate to a Salesforce org.
####################################################
.authenticate:
  before_script:
    - echo y | sf plugins:install sfdx-git-delta
    - python3 ./create_deploy_package.py -f $BEFORE_SHA -t $CI_COMMIT_SHA -o $DEPLOY_PACKAGE -m "$CI_COMMIT_MESSAGE"
    - source_folder=$(python3 ./check_package_dir.py)
    - python3 ./authenticate_sf.py --alias $AUTH_ALIAS --url $AUTH_URL
    - testclasses=$(python3 ./apex_tests.py --tests "$CI_COMMIT_MESSAGE" --manifest $DEPLOY_PACKAGE)


####################################################
# Validate metadata in a Salesforce org.
####################################################
.validate-metadata:
  extends: .authenticate
  cache:
    key: ${CI_MERGE_REQUEST_TARGET_BRANCH_NAME}
    paths:
      - .sf/
      - .sfdx/
  script:
    - python3 ./deploy_metadata_sf.py --tests "$testclasses" --manifest $DEPLOY_PACKAGE --wait $DEPLOY_TIMEOUT --environment $CI_ENVIRONMENT_URL --log $DEPLOY_LOG --validate --pipeline $CI_PIPELINE_SOURCE | tee -a $DEPLOY_LOG
  after_script:
    - rm $DEPLOY_PACKAGE
    - rm $DEPLOY_LOG

####################################################
# Deploy metadata into a Salesforce org.
####################################################
.deploy-metadata:
  extends: .authenticate
  script:
    # full-deploy if deploying non-apex
    # validate and quick-deploy if deploying apex
    - if [ "$testclasses" == "not a test" ];
      then python3 ./deploy_metadata_sf.py --tests "$testclasses" --manifest $DEPLOY_PACKAGE --wait $DEPLOY_TIMEOUT --environment $CI_ENVIRONMENT_URL --log $DEPLOY_LOG  | tee -a $DEPLOY_LOG;
      else python3 ./deploy_metadata_sf.py --tests "$testclasses" --manifest $DEPLOY_PACKAGE --wait $DEPLOY_TIMEOUT --environment $CI_ENVIRONMENT_URL --log $DEPLOY_LOG --validate | tee -a $DEPLOY_LOG;
      fi
  after_script:
    - rm $DEPLOY_PACKAGE
    - rm $DEPLOY_LOG
    - python3 ./deploy_slack_status.py --status "$CI_JOB_STATUS" --user "$GITLAB_USER_NAME" --job "$CI_JOB_URL" --project "$CI_PROJECT_URL" --commit "$CI_COMMIT_SHA" --environment "$CI_ENVIRONMENT_NAME" --hook "$SLACK_WEBHOOK_URL"

####################################################
# Declare configuration settings for the sandbox org.
####################################################
validate-dev:
  extends: .validate-metadata
  stage: validate
  resource_group: develop
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
      when: never
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'develop' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fullqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'develop'
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: SANDBOX
    AUTH_URL: $SANDBOX_AUTH_URL
    # This will work in merge request pipelines and merged results pipelines
    BEFORE_SHA: $CI_MERGE_REQUEST_DIFF_BASE_SHA
  environment:
    name: validate-sandbox
    url: https://avalara--dev.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

dev:
  extends: .deploy-metadata
  stage: deploy
  resource_group: develop
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $SANDBOX_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'develop'
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: SANDBOX
    AUTH_URL: $SANDBOX_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
  environment:
    name: sandbox
    url: https://avalara--dev.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

####################################################
# Declare configuration settings for the fullqa org.
####################################################
validate-fullqa:
  image: $CI_REGISTRY_IMAGE:$CI_MERGE_REQUEST_TARGET_BRANCH_NAME
  extends: .validate-metadata
  stage: validate
  resource_group: fullqa
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
      when: never
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'develop' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fullqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == 'fullqa'
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: FULLQA
    AUTH_URL: $FULLQA_AUTH_URL
    # This will work in merge request pipelines and merged results pipelines
    BEFORE_SHA: $CI_MERGE_REQUEST_DIFF_BASE_SHA
  environment:
    name: validate-fullqa
    url: https://avalara--fullqa.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

fullqa:
  image: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  extends: .deploy-metadata
  stage: deploy
  resource_group: fullqa
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $FULLQA_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == 'fullqa'
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: FULLQA
    AUTH_URL: $FULLQA_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
  environment:
    name: fullqa
    url: https://avalara--fullqa.sandbox.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

####################################################
# Declare configuration settings for the production org.
####################################################
validate-prod:
  extends: .validate-metadata
  stage: validate
  resource_group: production
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
      when: never
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'develop' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == 'fullqa' || $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: never
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == $CI_DEFAULT_BRANCH
      when: manual
  allow_failure: false
  variables:
    AUTH_ALIAS: PRODUCTION
    AUTH_URL: $PRODUCTION_AUTH_URL
    # This will work in merge request pipelines and merged results pipelines
    BEFORE_SHA: $CI_MERGE_REQUEST_DIFF_BASE_SHA
  environment:
    name: validate-prod
    url: https://avalara.my.salesforce.com
  tags: 
    - aws,prd,us-west-2

production:
  extends: .deploy-metadata
  stage: deploy
  resource_group: production
  rules:
    - if: $CI_PIPELINE_SOURCE == 'web'
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
      when: never
    - if: $PRODUCTION_DISABLED
      when: never
    - if: $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH
      when: always
  allow_failure: false
  variables:
    AUTH_ALIAS: PRODUCTION
    AUTH_URL: $PRODUCTION_AUTH_URL
    BEFORE_SHA: $CI_COMMIT_BEFORE_SHA
  environment:
    name: production
    url: https://avalara.my.salesforce.com
  tags: 
    - aws,prd,us-west-2
